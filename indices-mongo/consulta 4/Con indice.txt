{
  explainVersion: '2',
  stages: [
    {
      '$cursor': {
        queryPlanner: {
          namespace: 'facturas.facturacion',
          indexFilterSet: false,
          parsedQuery: {},
          queryHash: 'C7D869A3',
          planCacheKey: 'C7D869A3',
          maxIndexedOrSolutionsReached: false,
          maxIndexedAndSolutionsReached: false,
          maxScansToExplodeReached: false,
          winningPlan: {
            queryPlan: {
              stage: 'GROUP',
              planNodeId: 2,
              inputStage: {
                stage: 'COLLSCAN',
                planNodeId: 1,
                filter: {},
                direction: 'forward'
              }
            },
            slotBasedPlan: {
              slots: '$$RESULT=s14 env: { s1 = TimeZoneDatabase(Europe/Astrakhan...Europe/Zaporozhye) (timeZoneDB), s3 = 1689280240875 (NOW), s2 = Nothing (SEARCH_META) }',
              stages: '[2] mkobj s14 [_id = s12, ventaTotal = s13] true false \n' +
                '[2] project [s12 = newObj ("codigoCliente", s6, "nombreCliente", s7, "sucursal", s8), s13 = doubleDoubleSumFinalize (s10)] \n' +
                '[2] group [s6, s7, s8] [s10 = aggDoubleDoubleSum (s9)] spillSlots[s11] mergingExprs[aggMergeDoubleDoubleSums (s11)] \n' +
                '[2] project [s9 = getField (s4, "totalFactura")] \n' +
                '[2] project [s8 = getField (s4, "sucursal")] \n' +
                '[2] project [s7 = getField (s4, "nombreCliente")] \n' +
                '[2] project [s6 = getField (s4, "codigoCliente")] \n' +
                '[1] scan s4 s5 none none none none [] @"6bebd921-39c4-4ded-af51-62dda67833b3" true false '
            }
          },
          rejectedPlans: []
        },
        executionStats: {
          executionSuccess: true,
          nReturned: 30,
          executionTimeMillis: 1633,
          totalKeysExamined: 0,
          totalDocsExamined: 700000,
          executionStages: {
            stage: 'mkobj',
            planNodeId: 2,
            nReturned: 30,
            executionTimeMillisEstimate: 1607,
            opens: 1,
            closes: 1,
            saveState: 702,
            restoreState: 702,
            isEOF: 1,
            objSlot: 14,
            fields: [],
            projectFields: [ '_id', 'ventaTotal' ],
            projectSlots: [ Long("12"), Long("13") ],
            forceNewObject: true,
            returnOldObject: false,
            inputStage: {
              stage: 'project',
              planNodeId: 2,
              nReturned: 30,
              executionTimeMillisEstimate: 1607,
              opens: 1,
              closes: 1,
              saveState: 702,
              restoreState: 702,
              isEOF: 1,
              projections: {
                '12': 'newObj ("codigoCliente", s6, "nombreCliente", s7, "sucursal", s8) ',
                '13': 'doubleDoubleSumFinalize (s10) '
              },
              inputStage: {
                stage: 'group',
                planNodeId: 2,
                nReturned: 30,
                executionTimeMillisEstimate: 1607,
                opens: 1,
                closes: 1,
                saveState: 702,
                restoreState: 702,
                isEOF: 1,
                groupBySlots: [ Long("6"), Long("7"), Long("8") ],
                expressions: { '10': 'aggDoubleDoubleSum (s9) ' },
                mergingExprs: { '11': 'aggMergeDoubleDoubleSums (s11) ' },
                usedDisk: false,
                numSpills: 0,
                spilledRecords: 0,
                spilledDataStorageSize: 0,
                inputStage: {
                  stage: 'project',
                  planNodeId: 2,
                  nReturned: 700000,
                  executionTimeMillisEstimate: 1547,
                  opens: 1,
                  closes: 1,
                  saveState: 702,
                  restoreState: 702,
                  isEOF: 1,
                  projections: { '9': 'getField (s4, "totalFactura") ' },
                  inputStage: {
                    stage: 'project',
                    planNodeId: 2,
                    nReturned: 700000,
                    executionTimeMillisEstimate: 1519,
                    opens: 1,
                    closes: 1,
                    saveState: 702,
                    restoreState: 702,
                    isEOF: 1,
                    projections: { '8': 'getField (s4, "sucursal") ' },
                    inputStage: {
                      stage: 'project',
                      planNodeId: 2,
                      nReturned: 700000,
                      executionTimeMillisEstimate: 1502,
                      opens: 1,
                      closes: 1,
                      saveState: 702,
                      restoreState: 702,
                      isEOF: 1,
                      projections: { '7': 'getField (s4, "nombreCliente") ' },
                      inputStage: {
                        stage: 'project',
                        planNodeId: 2,
                        nReturned: 700000,
                        executionTimeMillisEstimate: 1472,
                        opens: 1,
                        closes: 1,
                        saveState: 702,
                        restoreState: 702,
                        isEOF: 1,
                        projections: { '6': 'getField (s4, "codigoCliente") ' },
                        inputStage: {
                          stage: 'scan',
                          planNodeId: 1,
                          nReturned: 700000,
                          executionTimeMillisEstimate: 1453,
                          opens: 1,
                          closes: 1,
                          saveState: 702,
                          restoreState: 702,
                          isEOF: 1,
                          numReads: 700000,
                          recordSlot: 4,
                          recordIdSlot: 5,
                          fields: [],
                          outputSlots: []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      nReturned: Long("30"),
      executionTimeMillisEstimate: Long("1607")
    },
    {
      '$project': {
        ventaTotal: true,
        codigoCliente: '$_id.codigoCliente',
        nombreCliente: '$_id.nombreCliente',
        sucursal: '$_id.sucursal',
        _id: false
      },
      nReturned: Long("30"),
      executionTimeMillisEstimate: Long("1607")
    }
  ],
  serverInfo: {
    host: 'TIC-00017',
    port: 27017,
    version: '6.0.7',
    gitVersion: '202ad4fda2618c652e35f5981ef2f903d8dd1f1a'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600
  },
  command: {
    aggregate: 'facturacion',
    pipeline: [
      {
        '$group': {
          _id: {
            codigoCliente: '$codigoCliente',
            nombreCliente: '$nombreCliente',
            sucursal: '$sucursal'
          },
          ventaTotal: { '$sum': '$totalFactura' }
        }
      },
      {
        '$project': {
          codigoCliente: '$_id.codigoCliente',
          nombreCliente: '$_id.nombreCliente',
          sucursal: '$_id.sucursal',
          ventaTotal: 1,
          _id: 0
        }
      }
    ],
    cursor: {},
    '$db': 'facturas'
  },
  ok: 1
}